{"version":3,"sources":["utils/fetchAPI.js","utils/getIP.js","components/Search.jsx","components/Current.jsx","components/Settings.jsx","components/common-styles/hilights.js","utils/Scale.jsx","components/AirQuality.jsx","components/Humidity.jsx","utils/useDate.js","components/Sun.jsx","components/UvIndex.jsx","components/Visibility.jsx","components/WindCompass.jsx","components/WindStatus.jsx","components/Highlights.jsx","components/ForecastItem.jsx","components/DayForecast.jsx","components/ThreeDayForecast.jsx","components/Forecasts.jsx","components/Photo.jsx","App.jsx","index.js"],"names":["baseURL","fetchData","url","a","axios","get","headers","key","data","getClientIp","publicIp","v4","fallbackUrls","SearchContainer","styled","div","Input","input","ResultItem","SearchInputContainer","locationSearchIconStyles","backgroundColor","height","width","padding","borderRadius","cursor","searchIconStyles","Search","fetchWeather","useState","searchResults","setSearchResults","searchTerm","setSearchTerm","autoComplete","e","term","target","value","results","getCurrentWeatherByLocation","ip","getCurrentWeather","location","style","onChange","placeholder","onClick","length","map","result","name","id","Container","ConditionIcon","Image","img","Temprature","DateTime","CuurentDay","span","CurrentTime","ConditionText","Rain","BR","Current","weatherData","displaySettings","d","Date","localtime","currentDay","getDay","src","current","condition","icon","alt","tempratureUnit","temp_c","temp_f","toLocaleTimeString","hour12","hour","minute","color","fontSize","text","forecast","forecastday","day","daily_chance_of_rain","Label","label","Span","Toggle","SettingsAlt","setDisplaySettings","selectedTemp","setSelectedTemp","selectedDist","setSelectedDist","handleChangeTemp","temp","handleChangeDist","dist","distanceUnit","type","checked","Title","Stat","StatUnit","Comment","ScaleBoarder","ScalePoint","props","parseInt","top","Scale","percentage","Wrapper","AirQuality","aqi","getAqiComment","Humidity","humidity","getHumidityComment","useDate","today","setDate","useEffect","timer","setInterval","clearInterval","Suntime","SunComment","TimeSpan","Sun","sunset","sunrise","date","getRemainingTime","time","timeDiff","hourDiff","Math","trunc","minDiff","round","abs","paddingRight","UvComment","UvIndex","uvi","uvIndex","setUvIndex","comment","setComment","setColor","progress","toString","arcStart","arcEnd","thickness","fillThickness","lineCap","fillColor","textStyle","size","font","Visibility","visKm","visM","unit","CompassRing","Bezel","PointerContainer","degree","Pointer","WindCompass","windDegree","WindStatus","windDirection","windKph","windMph","Highlights","wind_dir","wind_degree","wind_kph","wind_mph","vis_km","vis_miles","astro","air_quality","uv","Temp","TempMin","ImageWrapper","ForecastItem","title","minTemp","maxTemp","substr","indexOf","DayForecast","item","ThreeDayForecast","mintemp_c","mintemp_f","maxtemp_c","maxtemp_f","TabSwitch","Tabs","Tab","active","TabBody","Forecasts","tab","setTab","ImageContainer","Caption","loader","Loader","apiKey","version","libraries","mapOptions","center","lat","lng","zoom","Photo","ref","useRef","photo","setPhoto","load","then","google","maps","Map","console","log","service","places","PlacesService","request","query","fields","findPlaceFromQuery","status","PlacesServiceStatus","OK","forEach","photos","getUrl","catch","Master","Details","h2","Header","App","setWeatherData","setLocation","weatherLocation","country","fetchAtStartup","Settings","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d4ea2c1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const baseURL = \"https://api.weatherapi.com/v1\";\n\nexport const fetchData = async (url) => {\n  const { data } = await axios.get(url, {\n    headers: {\n      key: \"5a0f7a1d320d468aac9145106211712\",\n    },\n  });\n\n  return data;\n};\n","import publicIp from \"public-ip\";\n\nexport const getClientIp = async () =>\n  await publicIp.v4({ fallbackUrls: [\"https://ifconfig.co/ip\"] });\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { RiSearchLine } from \"react-icons/ri\";\nimport { MdLocationSearching } from \"react-icons/md\";\n\nimport { fetchData, baseURL } from \"../utils/fetchAPI\";\nimport { getClientIp } from \"../utils/getIP\";\n\nconst SearchContainer = styled.div`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  font-size: 1.2em;\n  border: none;\n  margin: 0 10px;\n`;\n\nconst ResultItem = styled.div`\n  background-color: #c3c5c8;\n  border: 1px solid white;\n  padding: 5px;\n  cursor: pointer;\n  transition: all 0.5s ease;\n\n  :hover {\n    background-color: #363341;\n    color: white;\n  }\n`;\n\nconst SearchInputContainer = styled.div`\n  height: 2.5em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst locationSearchIconStyles = {\n  backgroundColor: \"#f6f6f8\",\n  height: \"1.8em\",\n  width: \"1.8em\",\n  padding: \"3px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n};\n\nconst searchIconStyles = {\n  height: \"1.8em\",\n  width: \"1.8em\",\n  padding: \"3px\",\n  borderRadius: \"50%\",\n};\n\nconst Search = ({ fetchWeather }) => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const autoComplete = async (e) => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    if (searchTerm !== \"\") {\n      const results = await fetchData(`${baseURL}/search.json?q=${searchTerm}`);\n      setSearchResults(results);\n    }\n  };\n\n  const getCurrentWeatherByLocation = async () => {\n    setSearchTerm(\"\");\n    const ip = await getClientIp();\n    getCurrentWeather(ip);\n  };\n\n  const getCurrentWeather = async (location) => {\n    setSearchResults([]);\n    setSearchTerm(\"\");\n    await fetchWeather(location);\n  };\n\n  return (\n    <SearchContainer>\n      <SearchInputContainer>\n        <RiSearchLine style={searchIconStyles} />\n        <Input\n          onChange={(e) => autoComplete(e)}\n          placeholder=\"Search for places...\"\n          value={searchTerm}\n        />\n        <MdLocationSearching\n          onClick={getCurrentWeatherByLocation}\n          style={locationSearchIconStyles}\n        />\n      </SearchInputContainer>\n      {searchResults.length > 0 &&\n        searchResults.map((result) => (\n          <ResultItem\n            key={result.id}\n            onClick={() => getCurrentWeather(result.name)}\n          >\n            {result.name}\n          </ResultItem>\n        ))}\n    </SearchContainer>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineCloud } from \"react-icons/ai\";\nimport { BsCloudRain } from \"react-icons/bs\";\n\nconst Container = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: baseline;\n`;\n\nconst ConditionIcon = styled.div``;\nconst Image = styled.img`\n  max-width: 300px;\n  height: 300px;\n`;\nconst Temprature = styled.div`\n  font-size: 4.2em;\n`;\nconst DateTime = styled.div`\n  font-size: 1.4em;\n  margin: 30px 0;\n`;\nconst CuurentDay = styled.span`\n  font-weight: 500;\n`;\nconst CurrentTime = styled.span`\n  color: gray;\n`;\nconst ConditionText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 0;\n`;\nconst Rain = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 0;\n`;\nconst BR = styled.div`\n  height: 0px;\n  width: 100%;\n  border: 1px solid ghostwhite;\n`;\n\nconst Current = ({ weatherData, displaySettings }) => {\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const d = new Date(weatherData?.location?.localtime);\n  const currentDay = days[d.getDay()];\n\n  return (\n    <Container>\n      <ConditionIcon>\n        <Image\n          src={weatherData?.current?.condition?.icon}\n          alt=\"Condition Icon\"\n        />\n      </ConditionIcon>\n      <Temprature>\n        {displaySettings.tempratureUnit === \"C\" ? (\n          <>\n            {weatherData?.current?.temp_c} <sup>℃</sup>\n          </>\n        ) : (\n          <>\n            {weatherData?.current?.temp_f} <sup>℉</sup>\n          </>\n        )}\n      </Temprature>\n      <DateTime>\n        <CuurentDay>{currentDay}, </CuurentDay>\n        <CurrentTime>\n          {d.toLocaleTimeString(\"en-us\", {\n            hour12: false,\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n          })}\n        </CurrentTime>\n      </DateTime>\n      <BR />\n      <ConditionText>\n        <AiOutlineCloud style={{ color: \"lightgray\", fontSize: \"1.8em\" }} />\n        <span style={{ padding: \"0 5px\" }}>\n          {weatherData?.current?.condition?.text}\n        </span>\n      </ConditionText>\n      <Rain>\n        <BsCloudRain style={{ color: \"darkblue\", fontSize: \"1.5em\" }} />\n        <span style={{ padding: \"0 5px\" }}>Rain</span>\n        {weatherData?.forecast?.forecastday[0]?.day.daily_chance_of_rain} %\n      </Rain>\n    </Container>\n  );\n};\n\nexport default Current;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Label = styled.label`\n  display: block,\n  padding: 5px,\n  padding-left: 20px,\n`;\n\nconst Span = styled.div`\n  broder: 1px solid #ccc;\n  border-radius: 50%;\n  width: 1.8em;\n  height: 1.8em;\n  overflow: hidden;\n  line-height: 2em;\n  font-weight: 600;\n  text-align: center;\n  vertical-align: middle;\n  left: 0;\n  top: 50%;\n  margin: 0 8px;\n  cursor: pointer;\n  background-color: white;\n  transition: all 0.5s ease;\n\n  &:hover {\n    background-color: #484848;\n    color: white;\n  }\n`;\n\nconst Toggle = styled.input`\n  display: none;\n  &:checked + ${Span} {\n    background: #1a1a1a;\n    color: white;\n  }\n`;\n\nconst SettingsAlt = ({ setDisplaySettings, displaySettings }) => {\n  const [selectedTemp, setSelectedTemp] = useState(\"C\");\n  const [selectedDist, setSelectedDist] = useState(\"K\");\n\n  const handleChangeTemp = (temp) => {\n    setSelectedTemp(temp);\n    setDisplaySettings({ ...displaySettings, tempratureUnit: temp });\n  };\n\n  const handleChangeDist = (dist) => {\n    setSelectedDist(dist);\n    setDisplaySettings({ ...displaySettings, distanceUnit: dist });\n  };\n\n  return (\n    <Container>\n      <Label>\n        <Toggle\n          type=\"radio\"\n          name=\"temprature\"\n          checked={selectedTemp === \"C\"}\n          onChange={() => handleChangeTemp(\"C\")}\n        />\n        <Span>℃</Span>\n      </Label>\n      <Label>\n        <Toggle\n          type=\"radio\"\n          name=\"temprature\"\n          checked={selectedTemp === \"F\"}\n          onChange={() => handleChangeTemp(\"F\")}\n        />\n        <Span>℉</Span>\n      </Label>\n\n      <Label>\n        <Toggle\n          type=\"radio\"\n          name=\"distance\"\n          checked={selectedDist === \"K\"}\n          onChange={() => handleChangeDist(\"K\")}\n        />\n        <Span>K</Span>\n      </Label>\n      <Label>\n        <Toggle\n          type=\"radio\"\n          name=\"distance\"\n          checked={selectedDist === \"M\"}\n          onChange={() => handleChangeDist(\"M\")}\n        />\n        <Span>M</Span>\n      </Label>\n    </Container>\n  );\n};\n\nexport default SettingsAlt;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 200px;\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n  margin: 10px;\n  background-color: white;\n  border-radius: 20px;\n  padding: 20px;\n  position: relative;\n`;\n\nexport const Title = styled.div`\n  color: gray;\n`;\nexport const Stat = styled.div`\n  font-size: 2.5em;\n  font-weight: 500;\n  margin: 30px 0;\n`;\nexport const StatUnit = styled.span`\n  font-weight: 400;\n  font-size: 0.5em;\n`;\nexport const Comment = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: 1.3em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ScaleBoarder = styled.div`\n  border: 1px solid gray;\n  border-radius: 1em;\n  height: 100%;\n  width: 2em;\n  position: relative;\n`;\n\nconst ScalePoint = styled.div`\n  position: absolute;\n  border: 1px solid darkblue;\n  background-color: darkblue;\n  height: 1.2em;\n  width: 1.2em;\n  border-radius: 50%;\n  top: ${(props) => 90 - parseInt(props.top)}%;\n  left: 15%;\n`;\n\nconst Scale = ({ percentage }) => {\n  return (\n    <>\n      <ScaleBoarder>\n        <ScalePoint top={percentage} />\n      </ScaleBoarder>\n    </>\n  );\n};\n\nexport default Scale;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Container, Title, Stat, Comment } from \"./common-styles/hilights\";\nimport Scale from \"../utils/Scale\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst AirQuality = ({ aqi }) => {\n  const getAqiComment = () => {\n    switch (aqi) {\n      case 1:\n        return \"Good 👍\";\n      case 2:\n        return \"Moderate 🤙\";\n      case 3:\n        return \"Unhealthy for some 🤞\";\n      case 4:\n        return \"Unhealthy 🤧\";\n      case 5:\n        return \"Very Unhealthy 🤢\";\n      case 6:\n        return \"Hazardous 🧟\";\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <Container>\n      <Title>Air Quality</Title>\n      <Wrapper>\n        <Stat>{aqi}</Stat>\n        <Scale percentage={(aqi * 100) / 6} />\n      </Wrapper>\n      <Comment>{getAqiComment()}</Comment>\n    </Container>\n  );\n};\n\nexport default AirQuality;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Scale from \"../utils/Scale\";\nimport {\n  Container,\n  Title,\n  Stat,\n  StatUnit,\n  Comment,\n} from \"./common-styles/hilights\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Humidity = ({ humidity }) => {\n  const getHumidityComment = () => {\n    switch (true) {\n      case humidity >= 70:\n        return \"Poor High 😰\";\n      case humidity < 70 && humidity >= 60:\n        return \"Fair 😥\";\n      case humidity < 60 && humidity >= 30:\n        return \"Healthy 👍\";\n      case humidity < 30 && humidity >= 25:\n        return \"Fair 😥\";\n      case humidity < 25:\n        return \"Poor Low 😰\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Humidity</Title>\n      <Wrapper>\n        <Stat>\n          {humidity}\n          <StatUnit>%</StatUnit>\n        </Stat>\n        <Scale percentage={humidity} />\n      </Wrapper>\n      <Comment>{getHumidityComment()}</Comment>\n    </Container>\n  );\n};\n\nexport default Humidity;\n","import {useEffect, useState}from 'react';\n\nconst useDate = () =>{\n  const [today, setDate] = useState(new Date());\n  useEffect(()=>\n    {\n      const timer = setInterval(()=>{\n        setDate(new Date());\n      }, 60000)\n\n      return ()=>{clearInterval(timer);}\n    },[])\n\n  const time = today;\n\n  return time;\n}\n\nexport default useDate;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Title } from \"./common-styles/hilights\";\nimport useDate from \"../utils/useDate\";\n\nimport {\n  BsFillArrowUpCircleFill,\n  BsFillArrowDownCircleFill,\n} from \"react-icons/bs\";\n\nconst Wrapper = styled.div`\n  font-size: 1.1em;\n  font-weight: 500;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst Suntime = styled.div`\n  flex: 1;\n  height: 50%;\n  display: flex;\n  align-items: center;\n`;\n\nconst SunComment = styled.div`\n  font-size: 1.3em;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TimeSpan = styled.div`\n  color: gray;\n  font-size: 0.7em;\n`;\n\nconst Sun = ({ sunset, sunrise, date }) => {\n  const current = useDate();\n\n  const getRemainingTime = (time) => {\n    const timeAsDateTime = new Date(`${date} ${time}`);\n    const currentDateTime = current;\n\n    const timeDiff = (timeAsDateTime - currentDateTime) / 1000 / 60 / 60; // Time difference in hours\n    const hourDiff = Math.trunc(timeDiff); // Take the integer part as hours\n    const minDiff = Math.round((timeDiff % 1) * 60); // Take the fractional part as minutes\n\n    const remainingTime =\n      hourDiff < 0 || minDiff < 0\n        ? `- ${Math.abs(hourDiff)}h ${Math.abs(minDiff)}m`\n        : `+ ${hourDiff}h ${minDiff}m`;\n\n    return remainingTime; // If the difference is negative the minus sign is in front of hours only\n  };\n\n  return (\n    <Container>\n      <Title>Sunset & Sunrise</Title>\n      <Wrapper>\n        <Suntime>\n          <BsFillArrowUpCircleFill\n            color=\"#ffde4a\"\n            style={{ height: \"40px\", width: \"40px\", paddingRight: \"20px\" }}\n          />\n          <SunComment>\n            {sunrise}\n            <TimeSpan>{getRemainingTime(sunrise)}</TimeSpan>\n          </SunComment>\n        </Suntime>\n        <Suntime>\n          <BsFillArrowDownCircleFill\n            color=\"#ffde4a\"\n            style={{ height: \"40px\", width: \"40px\", paddingRight: \"20px\" }}\n          />\n          <SunComment>\n            {sunset}\n            <TimeSpan>{getRemainingTime(sunset)}</TimeSpan>\n          </SunComment>\n        </Suntime>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Sun;\n","import React, { useState, useEffect } from \"react\";\nimport ArcProgress from \"react-arc-progress\";\nimport styled from \"styled-components\";\n\nimport { Container, Title } from \"./common-styles/hilights\";\n\nconst UvComment = styled.div`\n  position: absolute;\n  top: 70%;\n  font-size: 1.3em;\n  padding-top: 0.5em;\n  color: ${(props) => props.color};\n`;\n\nconst UvIndex = ({ uvi }) => {\n  const [uvIndex, setUvIndex] = useState(1);\n  const [comment, setComment] = useState(\"\");\n  const [color, setColor] = useState(\"black\");\n\n  useEffect(() => {\n    setUvIndex(parseInt(uvi));\n\n    switch (true) {\n      case uvi <= 2:\n        setComment(\"Low\");\n        setColor(\"green\");\n        break;\n      case uvi >= 3 && uvi <= 5:\n        setComment(\"Moderate\");\n        setColor(\"#b0b300\");\n        break;\n      case uvi >= 6 && uvi <= 7:\n        setComment(\"High\");\n        setColor(\"orange\");\n        break;\n      case uvi >= 8 && uvi <= 10:\n        setComment(\"Very High\");\n        setColor(\"red\");\n        break;\n      case uvi >= 11:\n        setComment(\"Extreme\");\n        setColor(\"violet\");\n        break;\n\n      default:\n        setComment(\"\");\n        break;\n    }\n  }, [uvi]);\n\n  return (\n    <Container>\n      <Title>UV Index</Title>\n      <ArcProgress\n        progress={uvIndex / 12}\n        text={uvIndex.toString()}\n        arcStart={180}\n        arcEnd={360}\n        thickness={10}\n        fillThickness={25}\n        lineCap=\"square\"\n        fillColor=\"#ffde4a\"\n        textStyle={{ size: \"2.5em\", font: \"Spartan\" }}\n      />\n      <UvComment color={color}>{comment}</UvComment>\n    </Container>\n  );\n};\n\nexport default UvIndex;\n","import React from \"react\";\n\nimport {\n  Container,\n  Title,\n  Stat,\n  StatUnit,\n  Comment,\n} from \"./common-styles/hilights.js\";\n\nconst Visibility = ({ visKm, visM, unit }) => {\n  let comment;\n  switch (true) {\n    case visKm < 1:\n      comment = \"Fog 😨\";\n      break;\n    case visKm <= 2:\n      comment = \"Mist 🙄\";\n      break;\n    case visKm <= 5:\n      comment = \"Haze 😟\";\n      break;\n    case visKm > 5:\n      comment = \"Average 😊\";\n      break;\n\n    default:\n      comment = \"Clear\";\n  }\n\n  return (\n    <Container>\n      <Title>Visibility</Title>\n      <Stat>\n        {unit === \"K\" ? visKm : visM}\n        <StatUnit>{unit === \"K\" ? \"km\" : \"miles\"}</StatUnit>\n      </Stat>\n      <Comment>{comment}</Comment>\n    </Container>\n  );\n};\n\nexport default Visibility;\n","// Inspired by a CodePin by 'Marcus Sacco': https://codepen.io/marcussacco/pen/NAjZYo\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 30px;\n  height: 30px;\n  margin: 10px;\n`;\nconst CompassRing = styled.div`\n  height: 30px;\n  width: 30px;\n  border: 1px solid lightgray;\n  border-radius: 50%;\n  position: relative;\n`;\nconst Bezel = styled.div`\n  margin: 3.333px;\n  height: 20px;\n  width: 20px;\n  border: 2px dotted #e3f09b;\n  border-radius: 50%;\n  position: absolute;\n`;\nconst PointerContainer = styled.div`\n  height: 20px;\n  z-index: -50;\n  transform: rotate(${(props) => props.degree}deg);\n  transform-origin: center;\n`;\nconst Pointer = styled.div`\n  margin: 0 auto;\n  width: 0;\n  height: 0;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-bottom: 15px solid darkblue;\n  border-radius: 50%;\n`;\n\nconst WindCompass = ({ windDegree }) => {\n  return (\n    <Container>\n      <CompassRing>\n        <Bezel>\n          <PointerContainer degree={windDegree}>\n            <Pointer />\n          </PointerContainer>\n        </Bezel>\n      </CompassRing>\n    </Container>\n  );\n};\n\nexport default WindCompass;\n","import React from \"react\";\nimport WindCompass from \"./WindCompass\";\nimport {\n  Container,\n  Title,\n  Stat,\n  StatUnit,\n  Comment,\n} from \"./common-styles/hilights.js\";\n\nconst WindStatus = ({ windDirection, windDegree, windKph, windMph, unit }) => {\n  return (\n    <Container>\n      <Title>Wind Status</Title>\n      <Stat>\n        {unit === \"K\" ? windKph : windMph}{\" \"}\n        <StatUnit>{unit === \"K\" ? \"km/h\" : \"mph\"}</StatUnit>\n      </Stat>\n      <Comment>\n        <WindCompass windDegree={windDegree} />\n        {windDirection}\n      </Comment>\n    </Container>\n  );\n};\n\nexport default WindStatus;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AirQuality from \"./AirQuality\";\nimport Humidity from \"./Humidity\";\nimport Sun from \"./Sun\";\nimport UvIndex from \"./UvIndex\";\nimport Visibility from \"./Visibility\";\nimport WindStatus from \"./WindStatus\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  marign: 30px;\n  padding: 0 20px;\n`;\n\nconst Highlights = ({ weatherData, displaySettings }) => {\n  return (\n    <Container>\n      <WindStatus\n        windDirection={weatherData?.current?.wind_dir}\n        windDegree={weatherData?.current?.wind_degree}\n        windKph={weatherData?.current?.wind_kph}\n        windMph={weatherData?.current?.wind_mph}\n        unit={displaySettings.distanceUnit}\n      />\n      <Visibility\n        visKm={weatherData?.current?.vis_km}\n        visM={weatherData?.current?.vis_miles}\n        unit={displaySettings.distanceUnit}\n      />\n      <Sun\n        date={weatherData?.forecast?.forecastday[0]?.date}\n        sunset={weatherData?.forecast?.forecastday[0]?.astro?.sunset}\n        sunrise={weatherData?.forecast?.forecastday[0]?.astro?.sunrise}\n      />\n      <Humidity humidity={weatherData?.current?.humidity} />\n      <AirQuality aqi={weatherData?.current?.air_quality[\"us-epa-index\"]} />\n      <UvIndex uvi={weatherData?.current?.uv} />\n    </Container>\n  );\n};\n\nexport default Highlights;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 120px;\n  height: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin: 5px 5px;\n  border-radius: 15px;\n  background-color: white;\n  padding: 10px;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-weight: 500;\n`;\n\nconst Image = styled.img`\n  height: 100px;\n  width: 100px;\n`;\n\nconst Temp = styled.div``;\nconst TempMin = styled.div`\n  color: #9e9e9e;\n`;\n\nconst ImageWrapper = styled.div`\n  // margin: 1em 0;\n`;\nconst Temprature = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  font-size: 1.3em;\n  font-weight: 500;\n`;\n\nconst ForecastItem = ({ title, icon, minTemp, maxTemp, temp }) => {\n  return (\n    <Container>\n      <Title>{title.substr(title.indexOf(\" \") + 1)}</Title>\n      <ImageWrapper>\n        <Image src={icon} />\n      </ImageWrapper>\n      <Temprature>\n        {temp !== \"\" ? (\n          <Temp>{temp}°</Temp>\n        ) : (\n          <>\n            <Temp>{maxTemp}°</Temp>\n            <TempMin>{minTemp}°</TempMin>\n          </>\n        )}\n      </Temprature>\n    </Container>\n  );\n};\n\nexport default ForecastItem;\n","import React from \"react\";\nimport ForecastItem from \"./ForecastItem\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  max-width: 100%;\n  overflow: auto;\n`;\n\nconst DayForecast = ({ weatherData, displaySettings }) => {\n  return (\n    <Container>\n      {weatherData?.forecast?.forecastday[0]?.hour.map((item) => (\n        <ForecastItem\n          key={item.time}\n          title={item.time}\n          icon={item.condition.icon}\n          minTemp=\"\"\n          maxTemp=\"\"\n          temp={\n            displaySettings.tempratureUnit === \"C\" ? item.temp_c : item.temp_f\n          }\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default DayForecast;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ForecastItem from \"./ForecastItem\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst ThreeDayForecast = ({ weatherData, displaySettings }) => {\n  return (\n    <Container>\n      {weatherData?.forecast?.forecastday?.map((item) => (\n        <ForecastItem\n          key={item.date}\n          title={item.date}\n          icon={item.day.condition.icon}\n          minTemp={\n            displaySettings.tempratureUnit === \"C\"\n              ? item.day.mintemp_c\n              : item.day.mintemp_f\n          }\n          maxTemp={\n            displaySettings.tempratureUnit === \"C\"\n              ? item.day.maxtemp_c\n              : item.day.maxtemp_f\n          }\n          temp=\"\"\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default ThreeDayForecast;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport DayForecast from \"./DayForecast\";\nimport ThreeDayForecast from \"./ThreeDayForecast\";\n\nconst Container = styled.div`\n  // display: flex;\n  // align-items: center;\n  // justify-content: space-between;\n  // flex-wrap: wrap;\n  marign: auto;\n  padding: 0 20px;\n`;\n\nconst TabSwitch = styled.div``;\n\nconst Tabs = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Tab = styled.div`\n  margin: 1em;\n  font-size: 1.25em;\n  font-weight: bold;\n  color: ${(props) => (props.active ? \"black\" : \"#9e9e9e\")};\n  border-bottom: ${(props) => (props.active ? \"2px solid black\" : \"none\")};\n  cursor: pointer;\n\n  transition: color 0.3s ease;\n`;\n\nconst TabBody = styled.div`\n  max-width: 67vw;\n  display: flex;\n`;\n\nconst Forecasts = ({ weatherData, displaySettings }) => {\n  const [tab, setTab] = useState(1);\n\n  return (\n    <Container>\n      <TabSwitch>\n        <Tabs>\n          <Tab onClick={() => setTab(1)} active={tab === 1 ? true : false}>\n            24 Hours\n          </Tab>\n          <Tab onClick={() => setTab(2)} active={tab === 2 ? true : false}>\n            3 Days\n          </Tab>\n        </Tabs>\n        <TabBody>\n          {tab === 1 ? (\n            <DayForecast\n              weatherData={weatherData}\n              displaySettings={displaySettings}\n            />\n          ) : (\n            <ThreeDayForecast\n              weatherData={weatherData}\n              displaySettings={displaySettings}\n            />\n          )}\n        </TabBody>\n      </TabSwitch>\n    </Container>\n  );\n};\n\nexport default Forecasts;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport styled from \"styled-components\";\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin: 0 30px;\n`;\nconst Caption = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 1.5em;\n  font-weight: 700;\n  text-align: center;\n  color: ghostwhite;\n  text-shadow: 2px 2px 5px black;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 150px;\n  border-radius: 25px;\n  object-fit: cover;\n  margin: 0 auto;\n`;\n\nconst loader = new Loader({\n  apiKey: \"AIzaSyDsq-__hMimkHsfxsaT22qCsfV4wogE32I\",\n  version: \"weekly\",\n  libraries: [\"places\"],\n});\n\nconst mapOptions = {\n  center: {\n    lat: 0,\n    lng: 0,\n  },\n  zoom: 4,\n};\n\nconst Photo = ({ location }) => {\n  const ref = useRef();\n  const [photo, setPhoto] = useState(\"\");\n\n  useEffect(() => {\n    loader\n      .load()\n      .then((google) => {\n        let map = new google.maps.Map(ref.current, mapOptions);\n        console.log(map);\n        let service = new google.maps.places.PlacesService(map);\n        console.log(service);\n        let request = {\n          query: location || \"Aswan, Egypt\",\n          fields: [\"name\", \"place_id\", \"photo\"],\n        };\n\n        service.findPlaceFromQuery(request, (results, status) => {\n          if (status === google.maps.places.PlacesServiceStatus.OK) {\n            results.forEach((result) => {\n              console.log(result);\n              setPhoto(result?.photos[0].getUrl());\n            });\n          }\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, [location]);\n\n  return (\n    <>\n      <div ref={ref} />\n      <ImageContainer>\n        <Image src={photo} />\n        <Caption>{location || \"Aswan, Egypt\"}</Caption>\n      </ImageContainer>\n    </>\n  );\n};\n\nexport default Photo;\n","import styled from \"styled-components\";\nimport Search from \"./components/Search\";\nimport Current from \"./components/Current\";\nimport Settings from \"./components/Settings\";\nimport Highlights from \"./components/Highlights\";\n\nimport { baseURL, fetchData } from \"./utils/fetchAPI\";\n\nimport { useEffect, useState } from \"react\";\nimport Forecasts from \"./components/Forecasts\";\nimport Photo from \"./components/Photo\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst Master = styled.div`\n  flex: 1;\n  padding: 15px;\n`;\n\nconst Details = styled.div`\n  flex: 3;\n  background-color: #f6f6f8;\n`;\n\nconst Title = styled.h2``;\n\nconst Header = styled.div`\n  padding: 30px 30px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState({});\n  const [location, setLocation] = useState(\"\");\n\n  const fetchWeather = async (weatherLocation) => {\n    const result = await fetchData(\n      `${baseURL}/forecast.json?q=${weatherLocation}&days=3&aqi=yes`\n    );\n    console.log(result);\n    setLocation(`${result.location.name}, ${result.location.country}`);\n    setWeatherData(result);\n  };\n\n  const [displaySettings, setDisplaySettings] = useState({\n    tempratureUnit: \"C\",\n    distanceUnit: \"K\",\n  });\n\n  useEffect(() => {\n    const fetchAtStartup = async () => await fetchWeather(\"Aswan\");\n    fetchAtStartup();\n  }, []);\n\n  return (\n    <Container>\n      <Master>\n        <Search fetchWeather={fetchWeather} />\n        <Current weatherData={weatherData} displaySettings={displaySettings} />\n        <Photo location={location} />\n      </Master>\n      <Details>\n        <Header>\n          <Title>Today's Highlights</Title>\n          <Settings\n            setDisplaySettings={setDisplaySettings}\n            displaySettings={displaySettings}\n          />\n        </Header>\n\n        <Highlights\n          weatherData={weatherData}\n          displaySettings={displaySettings}\n        />\n\n        <Header>\n          <Title>Forecasts</Title>\n        </Header>\n        <Forecasts\n          weatherData={weatherData}\n          displaySettings={displaySettings}\n        />\n      </Details>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}